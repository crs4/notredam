Introduction
============

TinyKB is a Python module for implementing and managing "knowledge
bases" composed by "classes" and "objects" (i.e. class instances)
containing both scalar values and cross-references.

TinyKB classes are similar to those offered by object-oriented
programming languages.  They are defined with a set of strongly-typed
attributes, and they support single inheritance; furthermore, they can
be used to dinamically generate Python classes, which in turn can
instantiate Python objects.  Both classes and objects are
automatically mapped to a SQL DB.

Unlike most ORMs, TinyKB tries to leverage the full power of the SQL
language and DBMSs.  The class structure is reflected in the
underlying, autogenerated SQL DB schema: each class is mapped to a
different table, and class hierarchies are implemented with
referential constraints.  Object attribute types and constraints are
enforced using DBMS checks.  This way, the SQL representation of the
KB is clean, data-centric and application-agnostic, and the SQL DBMS
becomes an additional safety layer for ensuring data integrity.
